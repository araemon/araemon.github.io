---
title:"Swiftで一度だけ実行したい時に使えるファンクション"
date:"2018-05-22"
category:"blog"
---
image:https://cdn-ak.f.st-hatena.com/images/fotolife/a/araemonz/20180801/20180801111254.png

viewDidLayoutSubviewsなど何度も呼び出されてしまうファンクション内で一度だけ実行したい処理があった場合に以下のような書き方をしていた。
これだと毎回フラグを宣言、条件分岐するのは面倒だし、可読性がよくないなと思っていた。

```
var isFirst = false

override func viewDidLayoutSubviews() { // updateLayout
  if !isFirst {
     isFirst = true

    // 一度だけ実行したい処理を書く
  }  
}
```

クロージャーとlazyを使ったスマートな書き方を見つけたので参考にさせていただいた。
https://qiita.com/codelynx/items/f0243d631f2448e89026

```
private lazy var onceUpdateLayout: (()->())? = {
  // 一度だけ実行したい処理を書く
    return nil
}()

override func viewDidLayoutSubviews() { // updateLayout
  onceUpdateLayout?()
}
```

処理をファンクションに分離できたため`何をしているのか`がわかり可読性が上がった。

他にも色々な書き方がいろいろあるようだ。

クロージャー(Closures)は名前のない関数で変数として扱われる。
lazy(lazy stored property）は、参照されるときに初めて初期値が設定されるプロパティ。

<a target="_blank"  href="https://www.amazon.co.jp/gp/product/477419414X/ref=as_li_tl?ie=UTF8&camp=247&creative=1211&creativeASIN=477419414X&linkCode=as2&tag=101010fun-22&linkId=3293e410b5b6d910a78f78aeb9e0a67e"><img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&MarketPlace=JP&ASIN=477419414X&ServiceVersion=20070822&ID=AsinImage&WS=1&Format=_SL250_&tag=101010fun-22" ></a><img src="//ir-jp.amazon-adsystem.com/e/ir?t=101010fun-22&l=am2&o=9&a=477419414X" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />